import pytest
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time

@pytest.fixture(scope="function")
def browser():
    driver = webdriver.Chrome()  # Или другой драйвер (Firefox, Safari)
    driver.implicitly_wait(10)
    yield driver
    driver.quit()

def test_successful_password_recovery_phone(browser):
    # 1. Arrange: Open the login page
    browser.get("https://b2c.passport.rt.ru/")

    # 2. Act: Click on the 'Forgot password?' link
    forgot_password_link = browser.find_element(By.ID, "forgot-password")
    forgot_password_link.click()

    # 3. Act: Enter valid phone number for password recovery
    phone_input = browser.find_element(By.ID, "phone")
    phone_input.send_keys("ваш_номер_телефона")  # Замените на ваш реальный номер

    captcha_input = browser.find_element(By.ID, 'captcha')
    #  !!!ВНИМАНИЕ!!!: Тут нужно ввести капчу, автоматизировать сложно. Пока пропускаем
    #  В РЕАЛЬНЫХ АВТОТЕСТАХ НУЖНО ИСПОЛЬЗОВАТЬ ДРУГОЙ ПОДХОД (например, обходить капчу, выключать ее, использовать мок-сервер и т.д.)
    time.sleep(5) #Даем время ввести капчу

    # Act: Нажать кнопку "Продолжить"
    continue_button = browser.find_element(By.ID, 'reset-by-phone')
    continue_button.click()

    # 4. Act: Get and Enter valid SMS code
    #  !!!ВНИМАНИЕ!!!: Здесь нужно перехватить код из SMS. Реальный автоматический перехват SMS может быть сложным,
    #  поэтому мы будем использовать time.sleep() + ручной ввод кода.
    #  В РЕАЛЬНЫХ АВТОТЕСТАХ НУЖНО ИСПОЛЬЗОВАТЬ ДРУГОЙ ПОДХОД (например, SMS API, мок-сервер и т.д.)
    time.sleep(30)  # Даем время получить код

    sms_code_input = browser.find_element(By.ID, "code")
    sms_code_input.send_keys("временный_код")  # Замените на ваш полученный код

    # Act: Нажать кнопку "Продолжить"
    continue_button_2 = browser.find_element(By.ID, 'reset-by-code')
    continue_button_2.click()


    # 5. Act: Enter and confirm new password
    new_password_input = browser.find_element(By.ID, "password-new")
    new_password_input.send_keys("новый_пароль") # Замените на желаемый новый пароль

    confirm_password_input = browser.find_element(By.ID, "password-confirm")
    confirm_password_input.send_keys("новый_пароль") # Замените на желаемый новый пароль

    # Act: Нажать кнопку "Сохранить"
    save_password_button = browser.find_element(By.ID, "reset-password-submit")
    save_password_button.click()

    # 6. Assert: Verify successful password reset (check if user is redirected to login page)
    wait = WebDriverWait(browser, 10)
    wait.until(EC.url_contains("https://b2c.passport.rt.ru/auth/realms/b2c/login-actions/authenticate?session"))

    assert "https://b2c.passport.rt.ru/auth/realms/b2c/login-actions/authenticate?session" in browser.current_url

    print("Восстановление пароля по телефону прошло успешно!")

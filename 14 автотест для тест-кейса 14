import pytest
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time

@pytest.fixture(scope="function")
def browser():
    driver = webdriver.Chrome()  # Или другой драйвер (Firefox, Safari)
    driver.implicitly_wait(10)
    yield driver
    driver.quit()

def test_unsuccessful_password_recovery_phone_wrong_sms_code(browser):
    # 1. Arrange: Open the login page
    browser.get("https://b2c.passport.rt.ru/")

    # 2. Act: Click on the 'Forgot password?' link
    forgot_password_link = browser.find_element(By.ID, "forgot-password")
    forgot_password_link.click()

    # 3. Act: Enter valid phone number for password recovery
    phone_input = browser.find_element(By.ID, "phone")
    phone_input.send_keys("ваш_номер_телефона")  # Замените на ваш реальный номер

    captcha_input = browser.find_element(By.ID, 'captcha')
    #  !!!ВНИМАНИЕ!!!: Тут нужно ввести капчу, автоматизировать сложно. Пока пропускаем
    #  В РЕАЛЬНЫХ АВТОТЕСТАХ НУЖНО ИСПОЛЬЗОВАТЬ ДРУГОЙ ПОДХОД (например, обходить капчу, выключать ее, использовать мок-сервер и т.д.)
    time.sleep(5) #Даем время ввести капчу

    # Act: Нажать кнопку "Продолжить"
    continue_button = browser.find_element(By.ID, 'reset-by-phone')
    continue_button.click()

    # 4. Act: Enter INVALID SMS code
    # Здесь вводим неверный код
    sms_code_input = browser.find_element(By.ID, "code")
    sms_code_input.send_keys("неверный_код")  # Замените на неверный код

    # Act: Нажать кнопку "Продолжить"
    continue_button_2 = browser.find_element(By.ID, 'reset-by-code')
    continue_button_2.click()

    # 5. Assert: Verify unsuccessful password reset (check error message)
    # Ожидаем, что система не перенаправит пользователя и отобразит сообщение об ошибке
    wait = WebDriverWait(browser, 10)
    error_message = wait.until(EC.visibility_of_element_located((By.ID, "form-error-message")))

    # Проверяем, что сообщение об ошибке присутствует
    assert error_message.is_displayed()
    assert "Неверный код из SMS" in error_message.text
        
    # Проверяем, что URL не изменился и пользователь остался на странице ввода кода
    assert "reset-by-code" in browser.current_url

    print("Восстановление пароля по телефону не удалось (неверный код), как и ожидалось!")
